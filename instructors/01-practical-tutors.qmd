---
title: "Week 1: Clean, validate linelist, and plot epicurves"
format: 
  html: # learners solutions
    embed-resources: true
    output-file: "01-practical-solutions"
  docx: # learners practical
    output-file: "01-practical-guide"
  gfm: default # instructors
keep-md: false
format-links: false
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

::: {.content-hidden when-format="html"}

<!-- visible for instructors only -->
<!-- practical-week.md is generated from practical-week.qmd. Please edit that file -->
<!-- commit .md and .qmd files together -->

<!-- does not work for instructors text messages -->

:::

::: {.content-hidden when-format="docx"}

<!-- works for text on html and MD only -->

This practical is based in the following tutorial episodes:

- <https://epiverse-trace.github.io/tutorials-early/clean-data.html>
- <https://epiverse-trace.github.io/tutorials-early/validate.html>
- <https://epiverse-trace.github.io/tutorials-early/describe-cases.html>


:::


{{< include _welcome.qmd >}}

# Practical

This practical has two activities.

## Activity 1: Clean and standardize raw data

Get a clean and standardized data frame using the following available inputs:

- Raw messy data frame in CSV format

As a group, Write your answers to these questions:

- Diagnose the raw data. What data cleaning operations need to be performed on the dataset? Write all of them before writing the code.
- What time unit best describes the time span to calculate?
- Print the report: How would you communicate these results to a decision-maker?
- Compare: What differences do you identify from other group outputs? (if available)

### Inputs

| Group | Data | Link | Calculate time span | Categorize time span |
|---|---|---|---|---|
| 1 | Small linelist | <https://epiverse-trace.github.io/tutorials-early/data/linelist-date_of_birth.csv> | Age as of today | breaks = c(0, 20, 35, 60, 80) |
| 2 | Large linelist | <https://epiverse-trace.github.io/tutorials-early/data/covid_simulated_data.csv> | Delay from onset of symptoms to the time of death | breaks = c(0, 10, 15, 40) |
| 3 | Serology data | <https://epiverse-trace.github.io/tutorials-early/data/delta_full-messy.csv> | Time from last exposure to vaccine | breaks = c(0, 30, 100, 600) |

::: {.content-visible when-format="docx"}

### Your Code

Use the file `01-practical-activity-1.R`.


### Your Answers

Group 1

| data | paste screenshot here |
|---|---|
| messy |  |
| clean |  |

Write your answers to the questions above:

```







```


------------------------

Group 2

| data | paste screenshot here |
|---|---|
| messy |  |
| clean |  |

Write your answers to the questions above:

```







```


------------------------

Group 3

| data | paste screenshot here |
|---|---|
| messy |  |
| clean |  |

Write your answers to the questions above:

```







```

:::




## Activity 2: Validate linelist and plot epicurve

Get a validated linelist and incidence plot using the following available inputs:

- Clean data frame object

As a group, Write your answers to these questions:

- In the validation step, Do you need to allow for extra variable names and types?
- What is the most apprioriate time unit to aggregate the incidence plot, based on visual inspection? 
- Does using arguments like `fill`, `show_cases`, `angle`, `n_breaks` improve the incidence plot?
- Interpret: How would you communicate these results to a decision-maker?
- Compare: What differences do you identify from other group outputs? (if available)

### Inputs

Use outputs from activity 1.

::: {.content-visible when-format="docx"}

### Your Code

Use the file `01-practical-activity-2.R`.


### Your Answers

Group 1

| data | paste screenshot here |
|---|---|
| validated |  |
| incidence plot |  |

Write your answers to the questions above:

```







```


------------------------

Group 2

| data | paste screenshot here |
|---|---|
| validated |  |
| incidence plot |  |

Write your answers to the questions above:

```







```


------------------------

Group 3

| data | paste screenshot here |
|---|---|
| validated |  |
| incidence plot |  |

Write your answers to the questions above:

```







```

:::




::: {.content-visible unless-format="docx"}

### Solution

<!-- visible for instructors and learners after practical (solutions) -->

#### Code

##### Group 1

```{r, file = "fig/01-practical-instructor-1-G1.R", eval = FALSE}

```

```{r, file = "fig/01-practical-instructor-2-G1.R", eval = FALSE}

```

##### Group 2

```{r, file = "fig/01-practical-instructor-1-G2.R", eval = FALSE}

```

```{r, file = "fig/01-practical-instructor-2-G2.R", eval = FALSE}

```

##### Group 3

> Group 3 should investigate about how the argument `allow_extra = TRUE` us used in this GitHub issue entry <https://github.com/epiverse-trace/linelist/issues/176>

```{r, file = "fig/01-practical-instructor-1-G3.R", eval = FALSE}

```

```{r, file = "fig/01-practical-instructor-2-G3.R", eval = FALSE}

```

#### Outputs

| Group | Output |
|---|---|
| 1 | ![image](https://hackmd.io/_uploads/ry5d6xnA1e.png) |
| 2 | ![image](https://hackmd.io/_uploads/SJ2f0e2Cyx.png) |
| 3 | ![image](https://hackmd.io/_uploads/H1-PRlhA1g.png) |

#### Interpretation

Cleaning

- In small data frames, we can diagnose cleaning operations easier than large data frames. 
- For example, in the large data frame, before cleaning the sex variable with a data dictionary, we need to remove unconsistent missing values. We can use `dplyr::count()` to find this issue.

Validation

- Using the `linelist::tags_df()` output can keep stable downstream analysis. Jointly with `linelist::lost_tags_action(action = "error")` we can improve the capacity to diagnose changes in the input data. This can prevent getting misleading outputs from automatic daily code runs or dashboards updates.

Epicurve

- The argument `show_cases` can improve the visibility of `fill` categorical variables when the amount of observed cases is small.

# Continue your learning path

<!-- Suggest learners to Epiverse-TRACE documentation or external resources --->

Explore the downstream analysis you can do with {incidence2} outputs

- <https://www.reconverse.org/incidence2/doc/incidence2.html#sec:building-on-incidence2> 

You can use [{epikinetics}](https://seroanalytics.org/epikinetics/) to estimate antibody kinetics. Explore this sample code:

- <https://epiverse-trace.github.io/tutorials-early/epikinetics-statistics.html>

:::

# end